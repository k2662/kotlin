Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirNestedClassifierScopeWithSubstitution
            Classifiers:
                FirRegularClassSymbol public final class Nested : R|kotlin/Any|
        Static scope owner symbol: FirRegularClassSymbol public open class Base : R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol name: R|kotlin/String| = String(name)

FILE: [ResolvedTo(IMPORTS)] primaryConstructorParameter_initializerExpression.kt
    public open [ResolvedTo(ANNOTATION_ARGUMENTS)] class Base : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] constructor(): R|test/Base| {
            super<R|kotlin/Any|>()
        }

        public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class Nested : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] constructor(): R|test/Base.Nested| {
                super<R|kotlin/Any|>()
            }

        }

        public final [ResolvedTo(BODY_RESOLVE)] val fromBase: R|kotlin/String| = String()
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/String|

    }
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class Child : R|test/Base| {
        public [ResolvedTo(BODY_RESOLVE)] constructor([ResolvedTo(BODY_RESOLVE)] name: R|kotlin/String| = String(name)): R|test/Child| {
            super<R|test/Base|>()
        }

    }